// Mocks generated by Mockito 5.4.4 from annotations
// in skinx_test/test/cubit/playlist_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:mockito/mockito.dart' as _i1;
import 'package:oauth2_client/access_token_response.dart' as _i4;
import 'package:skinx_test/features/authentication/data/model/user_profile_response.dart'
    as _i5;
import 'package:skinx_test/features/authentication/data/repository/spotify_authentication_repository.dart'
    as _i9;
import 'package:skinx_test/features/authentication/data/source/remote/spotify_remote_data_source.dart'
    as _i3;
import 'package:skinx_test/features/playlist/data/model/my_playlist_request.dart'
    as _i8;
import 'package:skinx_test/features/playlist/domain/entity/playlist_ui_model.dart'
    as _i2;
import 'package:skinx_test/features/playlist/domain/usecase/get_playlist_usecase.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePlaylistModel_0 extends _i1.SmartFake implements _i2.PlaylistModel {
  _FakePlaylistModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSpotifyRemoteDataSource_1 extends _i1.SmartFake
    implements _i3.SpotifyRemoteDataSource {
  _FakeSpotifyRemoteDataSource_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAccessTokenResponse_2 extends _i1.SmartFake
    implements _i4.AccessTokenResponse {
  _FakeAccessTokenResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserProfileResponse_3 extends _i1.SmartFake
    implements _i5.UserProfileResponse {
  _FakeUserProfileResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IGetPlaylistUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockIGetPlaylistUseCase extends _i1.Mock
    implements _i6.IGetPlaylistUseCase {
  MockIGetPlaylistUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.PlaylistModel> getPlaylist(
          {required _i8.MyPlaylistRequest? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPlaylist,
          [],
          {#request: request},
        ),
        returnValue: _i7.Future<_i2.PlaylistModel>.value(_FakePlaylistModel_0(
          this,
          Invocation.method(
            #getPlaylist,
            [],
            {#request: request},
          ),
        )),
      ) as _i7.Future<_i2.PlaylistModel>);
}

/// A class which mocks [SpotifyAuthenticationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSpotifyAuthenticationRepository extends _i1.Mock
    implements _i9.SpotifyAuthenticationRepository {
  MockSpotifyAuthenticationRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.SpotifyRemoteDataSource get spotifyDataSource => (super.noSuchMethod(
        Invocation.getter(#spotifyDataSource),
        returnValue: _FakeSpotifyRemoteDataSource_1(
          this,
          Invocation.getter(#spotifyDataSource),
        ),
      ) as _i3.SpotifyRemoteDataSource);

  @override
  _i7.Future<_i4.AccessTokenResponse> authentication() => (super.noSuchMethod(
        Invocation.method(
          #authentication,
          [],
        ),
        returnValue: _i7.Future<_i4.AccessTokenResponse>.value(
            _FakeAccessTokenResponse_2(
          this,
          Invocation.method(
            #authentication,
            [],
          ),
        )),
      ) as _i7.Future<_i4.AccessTokenResponse>);

  @override
  _i7.Future<_i4.AccessTokenResponse> refreshToken(
          {required String? refreshToken}) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshToken,
          [],
          {#refreshToken: refreshToken},
        ),
        returnValue: _i7.Future<_i4.AccessTokenResponse>.value(
            _FakeAccessTokenResponse_2(
          this,
          Invocation.method(
            #refreshToken,
            [],
            {#refreshToken: refreshToken},
          ),
        )),
      ) as _i7.Future<_i4.AccessTokenResponse>);

  @override
  _i7.Future<_i5.UserProfileResponse> getUserProfile() => (super.noSuchMethod(
        Invocation.method(
          #getUserProfile,
          [],
        ),
        returnValue: _i7.Future<_i5.UserProfileResponse>.value(
            _FakeUserProfileResponse_3(
          this,
          Invocation.method(
            #getUserProfile,
            [],
          ),
        )),
      ) as _i7.Future<_i5.UserProfileResponse>);

  @override
  _i7.Future<dynamic> saveUserProfile(
          {required _i5.UserProfileResponse? userProfileResponse}) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveUserProfile,
          [],
          {#userProfileResponse: userProfileResponse},
        ),
        returnValue: _i7.Future<dynamic>.value(),
      ) as _i7.Future<dynamic>);
}
